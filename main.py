import telebot
from telebot.types import Message, BotCommand
import json
from dotenv import load_dotenv
import os

load_dotenv()

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
bot = telebot.TeleBot(TOKEN)

bot.set_my_commands([
    BotCommand("rep", "–ó–±—ñ–ª—å—à–∏—Ç–∏ —Ä–µ–ø—É—Ç–∞—Ü—ñ—é. (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤)"),
    BotCommand("norep", "–ó–º–µ–Ω—à–∏—Ç–∏ —Ä–µ–ø—É—Ç–∞—Ü—ñ—é. (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –∞–¥–º—ñ–Ω—ñ–≤)"),
    BotCommand("repboard", "–ü–æ–∫–∞–∑–∞—Ç–∏ —Ç–æ–ø-5 –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –∑–∞ —Ä–µ–ø—É—Ç–∞—Ü—ñ—î—é."),
])

REPUTATION_FILE = 'reputation.json'

def load_reputation():
    try:
        with open(REPUTATION_FILE, 'r') as f:
            return json.load(f)
    except FileNotFoundError:
        return {}

def save_reputation(reputation):
    with open(REPUTATION_FILE, 'w') as f:
        json.dump(reputation, f, indent=4)

def update_reputation(user_id, chat_id, delta):
    reputation = load_reputation()
    chat_id_str = str(chat_id)
    user_id_str = str(user_id)

    if chat_id_str not in reputation:
        reputation[chat_id_str] = {}

    if user_id_str not in reputation[chat_id_str]:
        reputation[chat_id_str][user_id_str] = 0

    reputation[chat_id_str][user_id_str] += delta
    save_reputation(reputation)

    return reputation[chat_id_str][user_id_str]

def is_admin(chat_id, user_id):
    member = bot.get_chat_member(chat_id, user_id)
    return member.status in ['administrator', 'creator']

@bot.message_handler(commands=['rep'])
def increase_rep(message: Message):
    if not is_admin(message.chat.id, message.from_user.id):
        return bot.reply_to(message, "–¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω–∏ –º–æ–∂—É—Ç—å –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Ä–µ–ø—É—Ç–∞—Ü—ñ—é.")

    target_user = message.reply_to_message.from_user if message.reply_to_message else message.entities[1].user if len(message.entities) > 1 else None

    if target_user:
        current_reputation = update_reputation(target_user.id, message.chat.id, 1)
        bot.reply_to(message, f"–†–µ–ø—É—Ç–∞—Ü—ñ—è {target_user.first_name} –∑–±—ñ–ª—å—à–µ–Ω–∞ –Ω–∞ 1.\n–ü–æ—Ç–æ—á–Ω–∞ —Ä–µ–ø—É—Ç–∞—Ü—ñ—è: {current_reputation}")
    else:
        bot.reply_to(message, "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /rep —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –∑ @username.")

@bot.message_handler(commands=['norep'])
def decrease_rep(message: Message):
    if not is_admin(message.chat.id, message.from_user.id):
        return bot.reply_to(message, "–¢—ñ–ª—å–∫–∏ –∞–¥–º—ñ–Ω–∏ –º–æ–∂—É—Ç—å –∑–º—ñ–Ω—é–≤–∞—Ç–∏ —Ä–µ–ø—É—Ç–∞—Ü—ñ—é.")

    target_user = message.reply_to_message.from_user if message.reply_to_message else message.entities[1].user if len(message.entities) > 1 else None

    if target_user:
        current_reputation = update_reputation(target_user.id, message.chat.id, -1)
        bot.reply_to(message, f"–†–µ–ø—É—Ç–∞—Ü—ñ—è {target_user.first_name} –∑–º–µ–Ω—à–µ–Ω–∞ –Ω–∞ 1.\n–ü–æ—Ç–æ—á–Ω–∞ —Ä–µ–ø—É—Ç–∞—Ü—ñ—è: {current_reputation}")
    else:
        bot.reply_to(message, "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ /norep —É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–±–æ –∑ @username.")

@bot.message_handler(commands=['repboard'])
def repboard(message: Message):
    reputation = load_reputation()
    chat_id_str = str(message.chat.id)
    
    if chat_id_str not in reputation:
        return bot.reply_to(message, "–£ —Ü—å–æ–º—É —á–∞—Ç—ñ —â–µ –Ω–µ–º–∞—î –¥–∞–Ω–∏—Ö –ø—Ä–æ —Ä–µ–ø—É—Ç–∞—Ü—ñ—é.")

    user_reputation = reputation[chat_id_str]
    sorted_users = sorted(user_reputation.items(), key=lambda x: x[1], reverse=True)

    top_5 = sorted_users[:5]
    board_message = "üèÜ –¢–æ–ø 5 –∑–∞ —Ä–µ–ø—É—Ç–∞—Ü—ñ—î—é:\n"
    for i, (user_id, rep) in enumerate(top_5, start=1):
        user = bot.get_chat_member(message.chat.id, int(user_id)).user
        board_message += f"{i}. {user.first_name} - {rep} —Ä–µ–ø—É—Ç–∞—Ü—ñ—ó\n"

    target_user_id = message.reply_to_message.from_user.id if message.reply_to_message else message.from_user.id
    if str(target_user_id) not in [user[0] for user in top_5]:
        user_rep = user_reputation.get(str(target_user_id), 0)
        user = bot.get_chat_member(message.chat.id, target_user_id).user
        board_message += f"\nüë§ {user.first_name} - {user_rep} —Ä–µ–ø—É—Ç–∞—Ü—ñ—ó"

    bot.reply_to(message, board_message)

if __name__ == "__main__":
    bot.polling(non_stop=True)
